---
# See http://docs.sonarqube.org/display/PLUG/LDAP+Plugin
- name: ensure the ldap plugin is downloaded into /extensions/plugins directory
  get_url:
    url: "{{ sonar_ldap_download }}"
    dest: "{{ sonar_plugins_dir }}/{{ sonar_ldap_file }}"
    owner: "{{ sonar_user }}"
    group: "{{ sonar_group }}"
    mode: 0440
  notify:
    - restart sonar
  tags:
    - sonar
    - plugins
    - ldap

- name: ensure sonar configuration file is updated to have ldap details
  lineinfile:
    dest: "{{ sonar_conf_file }}"
    regexp: "{{ item.regex }}"
    line: "{{ item.line }}"
  with_items:
    - regex: ^sonar.security.realm(.*)$
      line: sonar.security.realm=LDAP
    - regex: ^sonar.security.savePassword(.*)$
      line: sonar.security.savePassword=true
    - regex: ^ldap.url(.*)$
      line: "ldap.url={{ sonar_ldap_url }}"
    - regex: ^ldap.windows.auth(.*)$
      line: ldap.windows.auth=false
    - regex: ^ldap.bindDn(.*)$
      line: "ldap.bindDn={{ sonar_ldap_bind_user }}"
    - regex: ^ldap.bindPassword(.*)$
      line: "ldap.bindPassword={{ sonar_ldap_bind_pass }}"
# User Configuration
    - regex: ^ldap.user.baseDn(.*)$
      line: "ldap.user.baseDn={{ sonar_ldap_user_dn }}"
    - regex: ^ldap.user.request(.*)$
      line: ldap.user.request={{ sonar_ldap_user_filter }}
    - regex: ^ldap.user.realNameAttribute(.*)$
      line: 'ldap.user.realNameAttribute={{ sonar_ldap_user_name_attr }}'
    - regex: ^ldap.user.emailAttribute(.*)$
      line: "ldap.user.emailAttribute={{ sonar_ldap_user_email_attr }}"
# Group Configuration
    - regex: ^ldap.group.baseDn(.*)$
      line: "ldap.group.baseDn={{ sonar_ldap_group_dn }}"
    - regex: ^ldap.group.request(.*)$
      line: "ldap.group.request={{ sonar_ldap_group_filter }}"
  notify:
    - restart sonar
  tags:
    - sonar
    - plugins
    - ldap
